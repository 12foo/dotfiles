#!/bin/bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

CONF=$HOME/.config/herbstluftwm

# this does monitor and keyboard setup
python $CONF/system_setup.py auto

hc emit_hook reload

# start a bunch of stuff
which picom && ((pidof picom && pkill picom && picom --backend glx -b) || picom --backend glx -b)
# which pulseaudio && ((pidof pulseaudio && pulseaudio -k && pulseaudio -D) || pulseaudio -D)
# which polybar && ((pidof polybar && polybar -r) || polybar -c $CONF/polybar.conf default &)
if which lemonbar; then
    if pgrep topbar.sh; then
        pkill lemonbar
    fi
    $CONF/topbar.sh &>/dev/null &
fi

if [ -f "$HOME/.background.jpg" ]; then
    feh --bg-fill "$HOME/.background.jpg"
fi

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-r spawn rofi -columns 3 -show run -sidebar-mode true
hc keybind $Mod-p spawn sh $CONF/switch.sh screen
hc keybind $Mod-w spawn sh $CONF/switch.sh password
hc keybind Mod1-Tab spawn rofi -show window
hc keybind $Mod-Shift-r reload
hc keybind $Mod-c close_or_remove
hc keybind $Mod-Return spawn alacritty

# basic movement
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients
hc keybind $Mod-Control-Left  shift left
hc keybind $Mod-Control-Down  shift down
hc keybind $Mod-Control-Up    shift up
hc keybind $Mod-Control-Right shift right
hc keybind $Mod-Control-h     shift left
hc keybind $Mod-Control-j     shift down
hc keybind $Mod-Control-k     shift up
hc keybind $Mod-Control-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-e split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Shift-h       resize left +$resizestep
hc keybind $Mod-Shift-j       resize down +$resizestep
hc keybind $Mod-Shift-k       resize up +$resizestep
hc keybind $Mod-Shift-l       resize right +$resizestep
hc keybind $Mod-Shift-Left    resize left +$resizestep
hc keybind $Mod-Shift-Down    resize down +$resizestep
hc keybind $Mod-Shift-Up      resize up +$resizestep
hc keybind $Mod-Shift-Right   resize right +$resizestep

# tags
tag_names=( {1..8} )
tag_keys=( {1..8} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done
hc keybind Mod1-Control-Right use_index +1
hc keybind Mod1-Control-Left use_index -1

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-space cycle_layout 1
hc keybind $Mod-Control-space spawn $CONF/switch.sh layout
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-t pseudotile toggle

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize
hc set focus_follows_mouse 1

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle +1
hc keybind $Mod-Shift-Tab   cycle -1
hc keybind $Mod-i jumpto urgent

# media keys
hc keybind XF86AudioRaiseVolume spawn pactl -- set-sink-volume @DEFAULT_SINK@ +3%
hc keybind XF86AudioLowerVolume spawn pactl -- set-sink-volume @DEFAULT_SINK@ -3%
hc keybind $Mod+XF86AudioLowerVolume spawn pactl -- set-sink-volume @DEFAULT_SINK@ 30%
hc keybind XF86AudioMute spawn pactl -- set-sink-mute @DEFAULT_SINK@ toggle
hc keybind Mod5-XF86AudioPlay spawn mpc stop
hc keybind XF86AudioStop spawn mpc stop
hc keybind XF86AudioPlay spawn mpc toggle
hc keybind XF86AudioNext spawn mpc next
hc keybind XF86AudioPrev spawn mpc prev
hc keybind $Mod-XF86AudioPlay spawn sh $CONF/switch.sh song

# light
hc keybind XF86MonBrightnessUp spawn light -A 10
hc keybind XF86MonBrightnessDown spawn light -U 10

# tag stashing
hc keybind $Mod-asciicircum spawn sh $CONF/stash.sh

# other tools
# update email indicator
hc keybind $Mod-m spawn rm /tmp/.check-mail

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 12
hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 0
hc set mouse_recenter_gap 0
hc keybind $Mod-Shift-m toggle smart_frame_surroundings


hc set frame_border_width 2
hc set frame_border_active_color "#ffffff"
hc set frame_border_normal_color "#282f3a"

hc set default_frame_layout 2

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

